import React from 'react';
import axios from "axios";
import tempimage from './components/main_image.jpg'
import Card from '@material-ui/core/Card';
import mainText from './components/rearguard.png';
import { css } from "@emotion/core";
import { Button } from '@material-ui/core';
import 'bootstrap/dist/css/bootstrap.css';
import PacmanLoader from "react-spinners/PacmanLoader";
import Running from "./components/running.png"


class Frontend extends React.Component {
  constructor(props) {
    super(props);
    this.handleUploadImage = this.handleUploadImage.bind(this);
    this.renderComponent = this.renderComponent.bind(this);
    this.state = {
      loading: false,
      returndata: '',
      youhyo: false,
      ultimateyouhyo: false,
    }
  }


  componentDidMount() {
    this.state.loading = false
    this.setState({
      returndata: ''
    })
  }

  handleUploadImage(ev) {
    ev.preventDefault();
    const data = new FormData();
    this.fileName = ""
    data.append('file', this.uploadInput.files[0]);
    data.append('filename', this.fileName.value);
    axios.post(`http://localhost:8000/upload`, data, {
      headers: {
        'Content-Type': 'multipart/form-data',
        'Access-Control-Allow-Origin': '*'
      }
    })
      .then((response) => {
        this.setState({
          loading: false,
          returndata: response.data
        })
      })
      .catch(function (error) {
        console.log(error);
        alert(error);
      });
  }

  renderComponent() {
    var hellomo = parseFloat(this.state.returndata)
    this.setState({
      loading: true
    })
    if (this.state.returndata === '') {
      this.state.ultimateyouhyo = false;
    }
    else {
      this.setState({ ultimateyouhyo: true })
      if (this.state.ultimateyouhyo === true && this.hellomo <= 50) {
        this.setState({ youhyo: true }) //정상
      }
      else if (this.state.ultimateyouhyo === true && this.hellomo > 50) {
        this.setState({ youhyo: false }) //악성
      }
    }
  }

  render() {
    return (
      <form onSubmit={this.handleUploadImage}>
        <div>
          <img className="main_image" src={tempimage} ></img>
        </div>
        <div>
          <Card>
            <img src={mainText} className="title2" alt="maintext" />
          </Card>
        </div>
        <div className="center-text2">
          <h1 className="rearguard-text2">파일을 업로드 하시고 Running 버튼을 눌러주시면 검사를 시작합니다.</h1>
        </div>
        <div className="centerUpload">
          <div className = "file_input_div">
            {/* <img src = {select} className="file_input_img_btn"/> */}
            <input ref={(ref) => { this.uploadInput = ref; }} type="file"/>
          </div>
          <br />
          <div>
            <button style = {{color:'white', backgroundColor : 'skyblue'}} onClick={this.renderComponent}>Running</button>
            {/* <button onClick={this.renderComponent} className = "running" onClick={this.renderComponent}>
              <img src = {Running} className = "runningimage"></img>
            </button> */}
          </div>  
          <div className = "photo">
            <PacmanLoader size={50} color={"#123abc"} loading={this.state.loading} />
          </div>
          <div>
            {this.state.ultimateyouhyo ? this.state.youhyo ? `${this.state.returndata}` : `${this.state.returndata}` : `${this.state.returndata}`}
          </div>
        </div> 
      </form>
    );
  }
}

export default Frontend;